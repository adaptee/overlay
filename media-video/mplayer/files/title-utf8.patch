diff --git a/libvo/x11_common.c b/libvo/x11_common.c
index 0073aaa..ce9063a 100644
--- a/libvo/x11_common.c
+++ b/libvo/x11_common.c
@@ -123,6 +123,8 @@ static Atom XA_WIN_LAYER;
 static Atom XA_WIN_HINTS;
 static Atom XAWM_PROTOCOLS;
 static Atom XAWM_DELETE_WINDOW;
+static Atom XA_NET_WM_NAME;
+static Atom XAUTF8_STRING;

 #define XA_INIT(x) XA##x = XInternAtom(mDisplay, #x, False)

@@ -360,11 +362,13 @@ static void init_atoms(void)
     XA_INIT(_NET_WM_STATE_STAYS_ON_TOP);
     XA_INIT(_NET_WM_STATE_BELOW);
     XA_INIT(_NET_WM_PID);
+    XA_INIT(_NET_WM_NAME);
     XA_INIT(_WIN_PROTOCOLS);
     XA_INIT(_WIN_LAYER);
     XA_INIT(_WIN_HINTS);
     XA_INIT(WM_PROTOCOLS);
     XA_INIT(WM_DELETE_WINDOW);
+    XA_INIT(UTF8_STRING);
 }

 void update_xinerama_info(void) {
@@ -1111,7 +1115,7 @@ void vo_x11_create_vo_window(XVisualInfo *vis, int x, int y,
     vo_window = vo_x11_create_smooth_window(mDisplay, mRootWin, vis->visual,
                       x, y, width, height, vis->depth, col_map);
     vo_x11_classhint(mDisplay, vo_window, classname);
-    XStoreName(mDisplay, vo_window, title);
+    XChangeProperty(mDisplay, vo_window, XA_NET_WM_NAME, XAUTF8_STRING, 8, PropModeReplace, (const unsigned char*)title, (signed int)strlen(title));
     vo_hidecursor(mDisplay, vo_window);
     XSelectInput(mDisplay, vo_window, StructureNotifyMask);
     hint.x = x; hint.y = y;
@@ -1337,7 +1341,7 @@ int vo_x11_update_geometry(void) {
     XTranslateCoordinates(mDisplay, vo_window, mRootWin, 0, 0, &vo_dx, &vo_dy,
                           &dummy_win);
     if (vo_wintitle)
-        XStoreName(mDisplay, vo_window, vo_wintitle);
+        XChangeProperty(mDisplay, vo_window, XA_NET_WM_NAME, XAUTF8_STRING, 8, PropModeReplace, (const unsigned char*)vo_wintitle, (signed int)strlen(vo_wintitle));

     return depth <= INT_MAX ? depth : 0;
 }
